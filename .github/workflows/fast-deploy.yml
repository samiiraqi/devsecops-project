name: fast-deploy

on:
  push:
    branches: ["main"]
    # Run when NON-infra files change
    paths-ignore:
      - 'infra/**'
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 156041402173.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPO: devsecops
  CLUSTER_NAME: devsecops
  K8S_NAMESPACE: devsecops

permissions:
  id-token: write
  contents: read

# Same group as full-deploy so they never run together
concurrency:
  group: devsecops-${{ github.ref }}
  cancel-in-progress: true

jobs:
  app-build-deploy-only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # App: tests + scan + build + push (NO Terraform here)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit

      - name: Run tests
        run: |
          . venv/bin/activate
          pytest -q

      - name: Security scan (bandit)
        run: |
          . venv/bin/activate
          bandit -r app -ll

      - name: Configure AWS (for ECR/EKS)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::156041402173:role/devsecops-terraform-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image (tag = commit SHA)
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG

      # Deploy to EKS
      - name: Install kubectl
        run: |
          curl -sL https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl -o kubectl
          install -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client=true

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name "$CLUSTER_NAME" --region "$AWS_REGION"

      - name: Set image to new SHA (no infra apply)
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deploy/python-app \
            python-app=$ECR_REGISTRY/$ECR_REPO:${{ github.sha }}

      - name: Wait for rollout
        run: |
          kubectl -n "$K8S_NAMESPACE" rollout status deploy/python-app --timeout=180s
