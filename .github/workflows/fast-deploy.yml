name: fast-deploy

on:
  push:
    branches: ["main"]
    paths-ignore:
      - 'infra/**'
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 156041402173.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPO: devsecops
  CLUSTER_NAME: devsecops
  K8S_NAMESPACE: devsecops
  PYTHONPATH: .

permissions:
  id-token: write
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  app-build-deploy-only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install -q pytest bandit

      - name: Run tests
        run: |
          . venv/bin/activate
          python -m pytest -q

      - name: Security scan (bandit)
        run: |
          . venv/bin/activate
          if [ -d app ]; then bandit -r app -ll || true; fi

      - name: Configure AWS (assume GitHub role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::156041402173:role/devsecops-github-actions-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image (tag = commit SHA)
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG

      - name: Install kubectl
        run: |
          curl -sL https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl -o kubectl
          install -m 0755 kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name "$CLUSTER_NAME" --region "$AWS_REGION"

      - name: Set image & wait rollout
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deploy/python-app \
            python-app=$ECR_REGISTRY/$ECR_REPO:${{ github.sha }}
          kubectl -n "$K8S_NAMESPACE" rollout status deploy/python-app --timeout=300s
