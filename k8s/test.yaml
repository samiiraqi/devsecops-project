apiVersion: v1
kind: Namespace
metadata:
  name: devsecops
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-app
  namespace: devsecops
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python-app
  template:
    metadata:
      labels:
        app: python-app
    spec:
      containers:
        - name: python-app
          image: public.ecr.aws/docker/library/python:3.10-slim  # CI will overwrite to your ECR image
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: "production"
            - name: AUDIO_URL
              value: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3"  # <â€” remote MP3 here
          resources:
            requests: { cpu: "200m", memory: "256Mi" }
            limits:   { cpu: "500m", memory: "512Mi" }
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities: { drop: ["ALL"] }
          livenessProbe:
            httpGet: { path: /health, port: 5000 }
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /health, port: 5000 }
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: python-app-service
  namespace: devsecops
spec:
  selector:
    app: python-app
  ports:
    - port: 80
      targetPort: 5000
  type: LoadBalancer
  externalTrafficPolicy: Local